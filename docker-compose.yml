version: '3.9'

services:


  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    restart: unless-stopped
    user: root
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus/
      - ./metrics_containers_data/prometheus_data:/prometheus
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 500M
        reservations:
          cpus: '0.25'
          memory: 200M
    networks:
      - monitoring

  grafana:
    container_name: grafana
    image: grafana/grafana
    restart: unless-stopped
    user: root
    ports:
      - "3000:3000"
    volumes:
      - ./metrics_containers_data/grafana/provisioning/:/etc/grafana/provisioning/
      - ./metrics_containers_data/grafana:/var/lib/grafana
    depends_on:
      prometheus:
        condition: service_started
    networks:
      - monitoring
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000/" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s


  alertmanager:
    container_name: alertmanager
    image: prom/alertmanager
    hostname: alertmanager
    user: root
    restart: unless-stopped
    depends_on:
      - prometheus
    command:
      - --config.file=/etc/alertmanager/alertmanager.yml
    ports:
      - "9093:9093"
    volumes:
      - ./prometheus/alertmanager/:/etc/alertmanager/
      - ./metrics_containers_data/alertmanager_data:/alertmanager/
    networks:
      - monitoring

  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    restart: unless-stopped
    ports:
      - "9443:9443"
    volumes:
      - ./metrics_containers_data/portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: always
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    depends_on:
      - prometheus
    ports:
      - "9100:9100"
    networks:
      - monitoring


volumes:
  metrics_containers_data:
    driver: local


networks:
  monitoring:
    driver: bridge
